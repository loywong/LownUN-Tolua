//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Enum_SceneWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Enum_Scene));
		L.RegVar("None", get_None, null);
		L.RegVar("Splash", get_Splash, null);
		L.RegVar("NewPlayer", get_NewPlayer, null);
		L.RegVar("Login", get_Login, null);
		L.RegVar("Lobby", get_Lobby, null);
		L.RegVar("Battle", get_Battle, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Enum_Scene>.Check = CheckType;
		StackTraits<Enum_Scene>.Push = Push;
	}

	static void Push(IntPtr L, Enum_Scene arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Enum_Scene), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, Enum_Scene.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Splash(IntPtr L)
	{
		ToLua.Push(L, Enum_Scene.Splash);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NewPlayer(IntPtr L)
	{
		ToLua.Push(L, Enum_Scene.NewPlayer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Login(IntPtr L)
	{
		ToLua.Push(L, Enum_Scene.Login);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Lobby(IntPtr L)
	{
		ToLua.Push(L, Enum_Scene.Lobby);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Battle(IntPtr L)
	{
		ToLua.Push(L, Enum_Scene.Battle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Enum_Scene o = (Enum_Scene)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}


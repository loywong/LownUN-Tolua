//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameController), typeof(System.Object));
		L.RegFunction("GoScene", GoScene);
		L.RegFunction("New", _CreateGameController);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.RegVar("curSceneName", get_curSceneName, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameController(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameController obj = new GameController();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameController.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GoScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameController obj = (GameController)ToLua.CheckObject<GameController>(L, 1);
			Enum_Scene arg0 = (Enum_Scene)ToLua.CheckObject(L, 2, typeof(Enum_Scene));
			obj.GoScene(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GameController.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_curSceneName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameController obj = (GameController)o;
			string ret = obj.curSceneName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index curSceneName on a nil value");
		}
	}
}

